# openapi2-run.yaml
swagger: "2.0"
info:
  title: <API_ID>
  description: API Gateway routes to project Cloud Run backend
  version: 1.0.0
schemes:
  - http
produces:
  - application/json

# FIREBASE AUTH
securityDefinitions:
  firebase:
    authorizationUrl: ""
    flow: "implicit"
    type: "oauth2"
    x-google-issuer: "https://securetoken.google.com/<PROJECT_ID>"
    x-google-jwks_uri: "https://www.googleapis.com/service_accounts/v1/metadata/x509/securetoken@system.gserviceaccount.com"
    x-google-audiences: "<PROJECT_ID>"

paths:
  # EMAIL SERVICE ROUTES
  /register:
    options:
      summary: CORS pre-flight
      operationId: corsRegister
      x-google-backend:
        address: <EMAIL_SERVICVE_URL>/
      responses:
        "200":
          description: A successful response
    post:
      summary: Register email
      x-google-backend:
        address: <EMAIL_SERVICVE_URL>/api/register
      operationId: registerEmail
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
      responses:
        "200":
          description: Email registered successfully
          schema:
            type: string
        "400":
          description: Invalid email address
          schema:
            type: string
        "500":
          description: Database query failed
          schema:
            type: string

  /authorize:
    options:
      summary: CORS pre-flight
      operationId: corsAuthorize
      x-google-backend:
        address: <EMAIL_SERVICVE_URL>/
      responses:
        "200":
          description: A successful response
    post:
      summary: Authorize email
      x-google-backend:
        address: <EMAIL_SERVICVE_URL>/api/authorize
      operationId: authorizeEmail
      responses:
        "200":
          description: A successful response
          schema:
            type: string
        "401":
          description: Authorization failed
          schema:
            type: string
        "500":
          description: Something went wrong, please try again later.
          schema:
            type: string

  # MEDIA SERVICE ROUTES
  /files:
    options:
      summary: CORS pre-flight
      operationId: corsFiles
      x-google-backend:
        address: <MEDIA_SERVICE_URL>/
      responses:
        "200":
          description: A successful response
    get:
      summary: Fetch All Files Uploads
      x-google-backend:
        address: <MEDIA_SERVICE_URL>/api/files
      operationId: fetchAllFiles
      security:
        - firebase: []
      responses:
        "200":
          description: Successfully fetched all file upload
          schema:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                type:
                  type: string
        "500":
          description: Cloud storage access failed
          schema:
            type: string
    post:
      summary: Upload Files
      x-google-backend:
        address: <MEDIA_SERVICE_URL>/api/files
      operationId: uploadFiles
      security:
        - firebase: []
      # https://swagger.io/docs/specification/2-0/file-upload/
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: formData
          type: array
          items: # NOTE
            type: string
            format: binary
      responses:
        "200":
          description: File upload success
          schema:
            type: string
        "500":
          description: Cloud storage access failed
          schema:
            type: string

  # PROFILE SERVICE ROUTES
  /profile/{id}:
    options:
      summary: CORS pre-flight
      operationId: corsProfileID
      x-google-backend:
        address: <PROFILES_SERVICE_URL>/
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: A successful response
    get:
      summary: Get profile information by id
      x-google-backend:
        address: <PROFILES_SERVICE_URL>/api
        path_translation: APPEND_PATH_TO_ADDRESS
      operationId: getProfileById
      security:
        - firebase: []
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: A successful response
          schema:
            type: string
        "500":
          description: DB query to get document failed
          schema:
            type: string

  /profile:
    options:
      summary: CORS pre-flight
      operationId: corsProfile
      x-google-backend:
        address: <PROFILES_SERVICE_URL>/
      responses:
        "200":
          description: A successful response
    put:
      summary: Add or edit profile data
      x-google-backend:
        address: <PROFILES_SERVICE_URL>/api/profile/
      operationId: updateProfile
      security:
        - firebase: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              id:
                type: string
              content:
                type: object
                properties:
                  display_name:
                    type: string
                  about:
                    type: string
      responses:
        "200":
          description: Modified document successfully
          schema:
            type: string
        "500":
          description: DB query to create/update failed
          schema:
            type: string

  # QUIZ SERVICE ROUTES
  /quizzes:
    options:
      summary: CORS pre-flight
      operationId: corsQuizzes
      x-google-backend:
        address: <QUIZ_SERVICE_URL>/
      responses:
        "200":
          description: A successful response
    get:
      summary: Get all quizzes
      x-google-backend:
        address: <QUIZ_SERVICE_URL>/api/quizzes
      operationId: getAllQuizzes
      security:
        - firebase: []
      responses:
        "200":
          description: A successful response
          schema:
            type: string
        "500":
          description: Something went wrong, please try again later.
          schema:
            type: string
    post:
      summary: Create quiz
      x-google-backend:
        address: <QUIZ_SERVICE_URL>/api/quizzes
      operationId: createQuiz
      security:
        - firebase: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/Quiz"
      responses:
        "200":
          description: A successful response
          schema:
            type: string
        "500":
          description: Something went wrong, please try again later.
          schema:
            type: string

  /quizzes/{id}:
    options:
      summary: CORS pre-flight
      operationId: corsQuizzesID
      x-google-backend:
        address: <QUIZ_SERVICE_URL>/
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: A successful response
    get:
      summary: Get quiz by id
      x-google-backend:
        address: <QUIZ_SERVICE_URL>/api
        path_translation: APPEND_PATH_TO_ADDRESS
      operationId: getQuizById
      security:
        - firebase: []
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: A successful response
          schema:
            $ref: "#/definitions/Quiz"
        "500":
          description: Something went wrong, please try again later.
          schema:
            type: string
    put:
      summary: Update quiz by id
      x-google-backend:
        address: <QUIZ_SERVICE_URL>/api
        path_translation: APPEND_PATH_TO_ADDRESS
      operationId: updateQuizById
      security:
        - firebase: []
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/Quiz"
      responses:
        "200":
          description: A successful response
          schema:
            type: string
        "500":
          description: Something went wrong, please try again later.
          schema:
            type: string
    delete:
      summary: Delete quiz by id
      x-google-backend:
        address: <QUIZ_SERVICE_URL>/api
        path_translation: APPEND_PATH_TO_ADDRESS
      operationId: deleteQuizById
      security:
        - firebase: []
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        "200":
          description: Successfully deleted quiz with id
          schema:
            type: string
        "404":
          description: Could not delete quiz data due to invalid id
          schema:
            type: string
        "500":
          description: Database query failed.
          schema:
            type: string

definitions:
  Quiz:
    type: object
    properties:
      id:
        type: string
        description: A unique identifier for the quiz
        example: "random_id"
      title:
        type: string
        description: The title of the quiz
        example: "Sample Quiz"
      summary:
        type: string
        description: A brief summary of the quiz
        example: "This is an example of a quiz summary."
      questions:
        type: array
        items:
          $ref: "#/definitions/Question"
        description: A list of questions in the quiz
      likes:
        type: integer
        description: The number of likes for the quiz
        example: 0
      stats:
        type: object
        properties:
          avgTime:
            type: number
            description: The average time taken to complete the quiz
            example: 0
          avgScore:
            type: number
            description: The average score of the quiz
            example: 0
    required:
      - id
      - title
      - summary
      - questions
      - likes
      - stats

  Question:
    type: object
    properties:
      id:
        type: string
        description: The question ID
      question:
        type: string
        description: The text of the question
        default: ""
      type:
        type: number
        description: The question type
      options:
        type: array
        items:
          $ref: "#/definitions/Option"
        description: A list of options for the question
        default: []
      notes:
        type: string
        description: The sidenotes for a question
        default: ""
    required:
      - id
      - question
      - type
      - options
      - notes

  Option:
    type: object
    properties:
      label:
        type: string
        description: The text label of the option.
      answer:
        type: boolean
        description: Indicates whether this option is the correct answer.
      user_select:
        type: boolean
        description: Indicates whether the user has selected this option.
        default: false
      user_input:
        type: string
        description: Any input provided by the user for this option.
        default: ""
    required:
      - label
      - answer
      - user_select
      - user_input
